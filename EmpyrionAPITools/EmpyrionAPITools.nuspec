<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>$id$</id>

	<!-- When empty, this will be set at compile time to the [assembly:AssemblyProduct("")] attribute value -->
    <title>Empyrion API Tools</title>

	<!-- When empty, these will be set at compile time to either Thread.CurrentPrincipal.Identity.Name or Environment.UserName -->
  <authors>https://github.com/lostinplace</authors>
  <owners>lostinplace</owners>

	<!-- Ignore, this will get updated at compile time -->
    <version>$version$</version>

	<!-- When empty, this will be set at compile time to the [assembly:AssemblyDescription("")] attribute value -->	
    <summary></summary>
  <description>A library that makes it easier to write mods for Empyrion</description>
    
  <!-- Set this to false if you don't need to support a license -->
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
  <license type="expression">MIT</license>
  <projectUrl>https://github.com/lostinplace/EmpyrionAPITools</projectUrl>
  <repository type="git" url="https://github.com/lostinplace/EmpyrionAPITools" />
	<releaseNotes></releaseNotes>
	<tags>Empyrion Modding</tags>
  <copyright>Copyright 2019</copyright>

	
    <dependencies>
      <!-- Ignore, all referenced NuGet packages will be added here at compile time -->
    </dependencies>

    <frameworkAssemblies>
      <!-- This will get populated at compile time with any System.* references in the project -->
	  <!-- You will need to manually add any non-System.* assemblies here -->
    </frameworkAssemblies>
  </metadata>
  <files>
	<!-- This will automatically add the binary output of this project at compile time.
	It will inject a file element like the following:		
    <file src="**\EmpyrionAPITools.*" target="lib/[targetFramework]" exclude="EmpyrionAPITools.*.CodeAnalysisLog.xml;EmpyrionAPITools.*.lastcodeanalysissucceeded;*Test*.*" />
	The targetFramework value will be determined by the target framework of the project
	-->

	<!-- Add any additional files here manually -->
  </files>
</package>
