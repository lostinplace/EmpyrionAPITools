<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="C:\Program Files (x86)\Steam\steamapps\common\Empyrion - Dedicated Server\DedicatedServer\EmpyrionDedicated_Data\Managed\Mif.dll"  #>
<#@ assembly name="$(SolutionDir)EmpyrionAPIDefinitions\bin\$(Configuration)\EmpyrionAPIDefinitions.dll" #>
<#@ import namespace="EmpyrionAPIDefinitions" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Eleon.Modding" #>
<#@ output extension=".cs" #> 
using Eleon.Modding;
using System;
using System.Collections.Generic;
using System.Linq;

//this file was auto-generated

namespace EmpyrionAPITools
{
	public static partial class Broker {

    private static Dictionary<CmdId, Delegate> eventTable = new Dictionary<CmdId, Delegate>();
    
    <#  foreach(var item in APIManifest.EventManifest){
          var handlerType = item.ParamType == null ? "Action" : $"Action<{item.ParamType.Name}>";
    #>

    <# if(item.FeatureState == APIFeatureState.Deprecated) { #>
    [ObsoleteAttribute("This event has been deprecated, look to the new GameAPI for its functionality")] <#}#>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1009:DeclareEventHandlersCorrectly")]
    public static event <#=handlerType#> <#=item.CmdId#>
    {
      add {
        lock (eventTable) { 
          if (eventTable.ContainsKey(CmdId.<#=item.CmdId#>))
            eventTable[CmdId.<#=item.CmdId#>] = (<#=handlerType#>)eventTable[CmdId.<#=item.CmdId#>] + value;
          else
            eventTable[CmdId.<#=item.CmdId#>] = value;
        }
      }
      remove {
        lock (eventTable) { 
          if (eventTable.ContainsKey(CmdId.<#=item.CmdId#>))
            eventTable[CmdId.<#=item.CmdId#>] = (<#=handlerType#>)eventTable[CmdId.<#=item.CmdId#>] - value;
          else
            eventTable[CmdId.<#=item.CmdId#>] = value;
        }
      }
    }
    <#  }#>
  
  }
}